import java.util.*;

class Node {
    int data;
    Node left;
    Node right;

    Node(int val) {
        this.data = val;
        this.left = null;
        this.right = null;
    }
}

class Tree {
    Node root = null;

    public void insert(int val) {
        Node don = new Node(val);
        if (root == null) {
            root = don;
        } else {
            Node temp = root;
            while (true) {
                if (temp.data > don.data) {
                    if (temp.left == null) {
                        temp.left = don;
                        break;
                    } else {
                        temp = temp.left;
                    }
                } else {
                    if (temp.right == null) {
                        temp.right = don;
                        break;
                    } else {
                        temp = temp.right;
                    }
                }
            }
        }
    }

    // Pre-order traversal
    public void preOrder(Node node) {
        if (node == null) {
            return;
        }
        System.out.print(node.data + " ");
        preOrder(node.left);
        preOrder(node.right);
    }

    // In-order traversal
    public void inOrder(Node node) {
        if (node == null) {
            return;
        }
        inOrder(node.left);
        System.out.print(node.data + " ");
        inOrder(node.right);
    }

    // Post-order traversal
    public void postOrder(Node node) {
        if (node == null) {
            return;
        }
        postOrder(node.left);
        postOrder(node.right);
        System.out.print(node.data + " ");
    }
}

public class Main {
    public static void main(String[] args) {
        Tree t = new Tree();
        t.insert(100);
        t.insert(70);
        t.insert(110);
        t.insert(11);
        t.insert(85);
        t.insert(105);
        t.insert(123);
        t.insert(7);
        t.insert(93);
        t.insert(18);
        t.insert(114);
        t.insert(115);
        t.insert(116);

        System.out.print("Pre-order: ");
        t.preOrder(t.root);
        System.out.println();

        System.out.print("In-order: ");
        t.inOrder(t.root);
        System.out.println();

        System.out.print("Post-order: ");
        t.postOrder(t.root);
        System.out.println();
    }
}
