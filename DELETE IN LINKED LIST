class llist 
{
    Node head;

    class Node
    {
        int data;
        Node next;

        Node(int val)
        {
            data = val;
            next = null;
        }
    }

    public void insert(int val) 
    {
        Node newNode = new Node(val);
        newNode.next = head;
        head = newNode;
    }
    
    public void insert_pos(int val, int pos)
    {
        if (pos == 0) 
        {
            insert(val);
        }
        else
        {
            Node newNode = new Node(val);
            Node temp = head;
            for (int i = 1; i < pos; i++)
            {
                if (temp == null)
                {
                    System.out.println("Out of bound");
                    return;
                }
                temp = temp.next;
            }
            newNode.next = temp.next;
            temp.next = newNode;
        }
    }

    public void delete(int pos)
    {
        Node temp=head;
        for(int i=1;i<pos;i++)
        {
            temp=temp.next;
        }
        temp.next=temp.next.next;
    }
    
    public void display()
    {
        Node temp = head;
        while (temp != null) 
        {
            System.out.print(temp.data + " -> ");
            temp = temp.next;
        }
    }
}

public class Main 
{
    public static void main(String[] args) 
    {
        llist l = new llist();

        l.insert(100);
        l.insert(200);
        l.insert(300);
        l.insert(400);
        l.insert(500);
        l.insert(600);
        
        l.insert_pos(250, 3);
        l.delete(4);
        l.display();
    }
}
